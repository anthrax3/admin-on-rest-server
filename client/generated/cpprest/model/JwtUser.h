/**
 * DataHive RESTful APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * JwtUser.h
 *
 * 
 */

#ifndef JwtUser_H_
#define JwtUser_H_


#include "ModelBase.h"

#include "GrantedAuthority.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  JwtUser
    : public ModelBase
{
public:
    JwtUser();
    virtual ~JwtUser();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// JwtUser members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<GrantedAuthority>>& getAuthorities();
    bool authoritiesIsSet() const;
    void unsetAuthorities();
    void setAuthorities(std::vector<std::shared_ptr<GrantedAuthority>> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmail() const;
    bool emailIsSet() const;
    void unsetEmail();
    void setEmail(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    bool getEnabled() const;
    bool enabledIsSet() const;
    void unsetEnabled();
    void setEnabled(bool value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUsername() const;
    bool usernameIsSet() const;
    void unsetUsername();
    void setUsername(utility::string_t value);

protected:
    std::vector<std::shared_ptr<GrantedAuthority>> m_Authorities;
    bool m_AuthoritiesIsSet;
    utility::string_t m_Email;
    bool m_EmailIsSet;
    bool m_Enabled;
    bool m_EnabledIsSet;
    utility::string_t m_Username;
    bool m_UsernameIsSet;
};

}
}
}
}

#endif /* JwtUser_H_ */
