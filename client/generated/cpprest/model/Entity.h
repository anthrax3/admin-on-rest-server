/**
 * DataHive RESTful APIs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Entity.h
 *
 * 
 */

#ifndef Entity_H_
#define Entity_H_


#include "ModelBase.h"

#include "Field.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Entity
    : public ModelBase
{
public:
    Entity();
    virtual ~Entity();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Entity members

    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getCrud();
    bool crudIsSet() const;
    void unsetCrud();
    void setCrud(std::vector<utility::string_t> value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<Field>>& getFields();
    bool fieldsIsSet() const;
    void unsetFields();
    void setFields(std::vector<std::shared_ptr<Field>> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLabel() const;
    bool labelIsSet() const;
    void unsetLabel();
    void setLabel(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetName();
    void setName(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRedirect() const;
    bool redirectIsSet() const;
    void unsetRedirect();
    void setRedirect(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    bool getShowInMenu() const;
    bool showInMenuIsSet() const;
    void unsetShowInMenu();
    void setShowInMenu(bool value);

protected:
    std::vector<utility::string_t> m_Crud;
    bool m_CrudIsSet;
    std::vector<std::shared_ptr<Field>> m_Fields;
    bool m_FieldsIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Label;
    bool m_LabelIsSet;
    utility::string_t m_Name;
    bool m_NameIsSet;
    utility::string_t m_Redirect;
    bool m_RedirectIsSet;
    bool m_ShowInMenu;
    bool m_ShowInMenuIsSet;
};

}
}
}
}

#endif /* Entity_H_ */
