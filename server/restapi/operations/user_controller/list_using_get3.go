// Code generated by go-swagger; DO NOT EDIT.

package user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListUsingGET3HandlerFunc turns a function with the right signature into a list using g e t 3 handler
type ListUsingGET3HandlerFunc func(ListUsingGET3Params) middleware.Responder

// Handle executing the request and returning a response
func (fn ListUsingGET3HandlerFunc) Handle(params ListUsingGET3Params) middleware.Responder {
	return fn(params)
}

// ListUsingGET3Handler interface for that can handle valid list using g e t 3 params
type ListUsingGET3Handler interface {
	Handle(ListUsingGET3Params) middleware.Responder
}

// NewListUsingGET3 creates a new http.Handler for the list using g e t 3 operation
func NewListUsingGET3(ctx *middleware.Context, handler ListUsingGET3Handler) *ListUsingGET3 {
	return &ListUsingGET3{Context: ctx, Handler: handler}
}

/*ListUsingGET3 swagger:route GET /user/_users user-controller listUsingGET3

list

*/
type ListUsingGET3 struct {
	Context *middleware.Context
	Handler ListUsingGET3Handler
}

func (o *ListUsingGET3) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListUsingGET3Params()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
