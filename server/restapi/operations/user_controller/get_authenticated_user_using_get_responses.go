// Code generated by go-swagger; DO NOT EDIT.

package user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/roscopecoltran/admin-on-rest-server/server/models"
)

// GetAuthenticatedUserUsingGETOKCode is the HTTP code returned for type GetAuthenticatedUserUsingGETOK
const GetAuthenticatedUserUsingGETOKCode int = 200

/*GetAuthenticatedUserUsingGETOK OK

swagger:response getAuthenticatedUserUsingGETOK
*/
type GetAuthenticatedUserUsingGETOK struct {

	/*
	  In: Body
	*/
	Payload *models.JwtUser `json:"body,omitempty"`
}

// NewGetAuthenticatedUserUsingGETOK creates GetAuthenticatedUserUsingGETOK with default headers values
func NewGetAuthenticatedUserUsingGETOK() *GetAuthenticatedUserUsingGETOK {
	return &GetAuthenticatedUserUsingGETOK{}
}

// WithPayload adds the payload to the get authenticated user using g e t o k response
func (o *GetAuthenticatedUserUsingGETOK) WithPayload(payload *models.JwtUser) *GetAuthenticatedUserUsingGETOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get authenticated user using g e t o k response
func (o *GetAuthenticatedUserUsingGETOK) SetPayload(payload *models.JwtUser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAuthenticatedUserUsingGETOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAuthenticatedUserUsingGETUnauthorizedCode is the HTTP code returned for type GetAuthenticatedUserUsingGETUnauthorized
const GetAuthenticatedUserUsingGETUnauthorizedCode int = 401

/*GetAuthenticatedUserUsingGETUnauthorized Unauthorized

swagger:response getAuthenticatedUserUsingGETUnauthorized
*/
type GetAuthenticatedUserUsingGETUnauthorized struct {
}

// NewGetAuthenticatedUserUsingGETUnauthorized creates GetAuthenticatedUserUsingGETUnauthorized with default headers values
func NewGetAuthenticatedUserUsingGETUnauthorized() *GetAuthenticatedUserUsingGETUnauthorized {
	return &GetAuthenticatedUserUsingGETUnauthorized{}
}

// WriteResponse to the client
func (o *GetAuthenticatedUserUsingGETUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// GetAuthenticatedUserUsingGETForbiddenCode is the HTTP code returned for type GetAuthenticatedUserUsingGETForbidden
const GetAuthenticatedUserUsingGETForbiddenCode int = 403

/*GetAuthenticatedUserUsingGETForbidden Forbidden

swagger:response getAuthenticatedUserUsingGETForbidden
*/
type GetAuthenticatedUserUsingGETForbidden struct {
}

// NewGetAuthenticatedUserUsingGETForbidden creates GetAuthenticatedUserUsingGETForbidden with default headers values
func NewGetAuthenticatedUserUsingGETForbidden() *GetAuthenticatedUserUsingGETForbidden {
	return &GetAuthenticatedUserUsingGETForbidden{}
}

// WriteResponse to the client
func (o *GetAuthenticatedUserUsingGETForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetAuthenticatedUserUsingGETNotFoundCode is the HTTP code returned for type GetAuthenticatedUserUsingGETNotFound
const GetAuthenticatedUserUsingGETNotFoundCode int = 404

/*GetAuthenticatedUserUsingGETNotFound Not Found

swagger:response getAuthenticatedUserUsingGETNotFound
*/
type GetAuthenticatedUserUsingGETNotFound struct {
}

// NewGetAuthenticatedUserUsingGETNotFound creates GetAuthenticatedUserUsingGETNotFound with default headers values
func NewGetAuthenticatedUserUsingGETNotFound() *GetAuthenticatedUserUsingGETNotFound {
	return &GetAuthenticatedUserUsingGETNotFound{}
}

// WriteResponse to the client
func (o *GetAuthenticatedUserUsingGETNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
