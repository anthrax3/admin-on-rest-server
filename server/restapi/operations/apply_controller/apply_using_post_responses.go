// Code generated by go-swagger; DO NOT EDIT.

package apply_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/roscopecoltran/admin-on-rest-server/server/models"
)

// ApplyUsingPOSTOKCode is the HTTP code returned for type ApplyUsingPOSTOK
const ApplyUsingPOSTOKCode int = 200

/*ApplyUsingPOSTOK OK

swagger:response applyUsingPOSTOK
*/
type ApplyUsingPOSTOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseEntity `json:"body,omitempty"`
}

// NewApplyUsingPOSTOK creates ApplyUsingPOSTOK with default headers values
func NewApplyUsingPOSTOK() *ApplyUsingPOSTOK {
	return &ApplyUsingPOSTOK{}
}

// WithPayload adds the payload to the apply using p o s t o k response
func (o *ApplyUsingPOSTOK) WithPayload(payload *models.ResponseEntity) *ApplyUsingPOSTOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the apply using p o s t o k response
func (o *ApplyUsingPOSTOK) SetPayload(payload *models.ResponseEntity) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApplyUsingPOSTOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApplyUsingPOSTCreatedCode is the HTTP code returned for type ApplyUsingPOSTCreated
const ApplyUsingPOSTCreatedCode int = 201

/*ApplyUsingPOSTCreated Created

swagger:response applyUsingPOSTCreated
*/
type ApplyUsingPOSTCreated struct {
}

// NewApplyUsingPOSTCreated creates ApplyUsingPOSTCreated with default headers values
func NewApplyUsingPOSTCreated() *ApplyUsingPOSTCreated {
	return &ApplyUsingPOSTCreated{}
}

// WriteResponse to the client
func (o *ApplyUsingPOSTCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// ApplyUsingPOSTUnauthorizedCode is the HTTP code returned for type ApplyUsingPOSTUnauthorized
const ApplyUsingPOSTUnauthorizedCode int = 401

/*ApplyUsingPOSTUnauthorized Unauthorized

swagger:response applyUsingPOSTUnauthorized
*/
type ApplyUsingPOSTUnauthorized struct {
}

// NewApplyUsingPOSTUnauthorized creates ApplyUsingPOSTUnauthorized with default headers values
func NewApplyUsingPOSTUnauthorized() *ApplyUsingPOSTUnauthorized {
	return &ApplyUsingPOSTUnauthorized{}
}

// WriteResponse to the client
func (o *ApplyUsingPOSTUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// ApplyUsingPOSTForbiddenCode is the HTTP code returned for type ApplyUsingPOSTForbidden
const ApplyUsingPOSTForbiddenCode int = 403

/*ApplyUsingPOSTForbidden Forbidden

swagger:response applyUsingPOSTForbidden
*/
type ApplyUsingPOSTForbidden struct {
}

// NewApplyUsingPOSTForbidden creates ApplyUsingPOSTForbidden with default headers values
func NewApplyUsingPOSTForbidden() *ApplyUsingPOSTForbidden {
	return &ApplyUsingPOSTForbidden{}
}

// WriteResponse to the client
func (o *ApplyUsingPOSTForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// ApplyUsingPOSTNotFoundCode is the HTTP code returned for type ApplyUsingPOSTNotFound
const ApplyUsingPOSTNotFoundCode int = 404

/*ApplyUsingPOSTNotFound Not Found

swagger:response applyUsingPOSTNotFound
*/
type ApplyUsingPOSTNotFound struct {
}

// NewApplyUsingPOSTNotFound creates ApplyUsingPOSTNotFound with default headers values
func NewApplyUsingPOSTNotFound() *ApplyUsingPOSTNotFound {
	return &ApplyUsingPOSTNotFound{}
}

// WriteResponse to the client
func (o *ApplyUsingPOSTNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
